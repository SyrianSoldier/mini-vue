{"version":3,"file":"vue.js","sources":["../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["class Observer {\r\n  constructor(data) {\r\n    this.walk(data) //所有的逻辑放在构造函数里,太臃肿, 封装到一个方法中去做代理\r\n  }\r\n\r\n  walk(data) {\r\n    const keys = Object.keys(data)\r\n    keys.forEach((key) => {\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n}\r\n// 对原有data(数据对象进行改造, 全部给setter,getter)\r\n// 使用闭包 用value保存data[key]的值\r\n// 当访问data的属性时, 实际上访问和修改的是闭包value中的值\r\nfunction defineReactive(data, key, value) {\r\n  observer(value) //如果对象的属性值仍为对象, 递归!\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      observer(newValue) //如果修改的属性依然为对象, 递归!\r\n      value = newValue\r\n    }\r\n  })\r\n}\r\n\r\nexport function observer(data) {\r\n  // 在js中typeof null 也是object\r\n  if (typeof data !== 'object' || typeof data === null) {\r\n    return\r\n  }\r\n  // 真正的处理data, 放在一个类里, 封装性比较好\r\n  new Observer(data)\r\n}\r\n","import { observer } from './observer/index.js'\r\n\r\nexport function initState(vm) {\r\n  initProps(vm)\r\n  initData(vm)\r\n  initMethod(vm)\r\n  initComputed(vm)\r\n  initWatch(vm)\r\n}\r\n\r\nfunction initProps(vm) {}\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  vm._data = data = typeof data === 'function' ? data.call(vm) : data //对data是函数的情况执行处理,保证this是vm\r\n  //开始数据劫持\r\n  observer(data)\r\n}\r\nfunction initMethod(vm) {}\r\nfunction initComputed(vm) {}\r\nfunction initWatch(vm) {}\r\n","import { initState } from './state'\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    let vm = this\r\n    // 对做响应式!\r\n    initState(vm)\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n\r\nfunction Vue(options) {\r\n  this.$options = options\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue) //公共方法挂载原型上\r\n\r\nexport default Vue\r\n"],"names":["Observer","data","walk","keys","Object","forEach","key","defineReactive","value","observer","defineProperty","get","set","newValue","initState","vm","initData","$options","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAMA;EACJ,oBAAYC,IAAZ,EAAkB;EAAA;;EAChB,SAAKC,IAAL,CAAUD,IAAV,EADgB;EAEjB;;;;aAED,cAAKA,IAAL,EAAW;EACT,UAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,IAAZ,CAAb;EACAE,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACC,GAAD,EAAS;EACpBC,QAAAA,cAAc,CAACN,IAAD,EAAOK,GAAP,EAAYL,IAAI,CAACK,GAAD,CAAhB,CAAd;EACD,OAFD;EAGD;;;;;EAGH;EACA;;;EACA,SAASC,cAAT,CAAwBN,IAAxB,EAA8BK,GAA9B,EAAmCE,KAAnC,EAA0C;EACxCC,EAAAA,QAAQ,CAACD,KAAD,CAAR,CADwC;;EAExCJ,EAAAA,MAAM,CAACM,cAAP,CAAsBT,IAAtB,EAA4BK,GAA5B,EAAiC;EAC/BK,IAAAA,GAD+B,iBACzB;EACJ,aAAOH,KAAP;EACD,KAH8B;EAI/BI,IAAAA,GAJ+B,eAI3BC,QAJ2B,EAIjB;EACZJ,MAAAA,QAAQ,CAACI,QAAD,CAAR,CADY;;EAEZL,MAAAA,KAAK,GAAGK,QAAR;EACD;EAP8B,GAAjC;EASD;;EAEM,SAASJ,QAAT,CAAkBR,IAAlB,EAAwB;EAC7B;EACA,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,IAAhD,EAAsD;EACpD;EACD,GAJ4B;;;EAM7B,MAAID,QAAJ,CAAaC,IAAb;EACD;;ECjCM,SAASa,SAAT,CAAmBC,EAAnB,EAAuB;EAE5BC,EAAAA,QAAQ,CAACD,EAAD,CAAR;EAID;;EAGD,SAASC,QAAT,CAAkBD,EAAlB,EAAsB;EACpB,MAAId,IAAI,GAAGc,EAAE,CAACE,QAAH,CAAYhB,IAAvB;EACAc,EAAAA,EAAE,CAACG,KAAH,GAAWjB,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACkB,IAAL,CAAUJ,EAAV,CAA7B,GAA6Cd,IAA/D,CAFoB;EAGpB;;EACAQ,EAAAA,QAAQ,CAACR,IAAD,CAAR;EACD;;ECfM,SAASmB,SAAT,CAAmBC,GAAnB,EAAwB;EAC7BA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC,QAAIT,EAAE,GAAG,IAAT,CADuC;;EAGvCD,IAAAA,SAAS,CAACC,EAAD,CAAT;EACD,GAJD;EAKD;;ECLD,SAASM,GAAT,CAAaG,OAAb,EAAsB;EACpB,OAAKP,QAAL,GAAgBO,OAAhB;;EACA,OAAKD,KAAL,CAAWC,OAAX;EACD;;EAEDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}